---
# yaml-language-server: $schema=https://schema.blue-build.org/recipe-v1.json
# image will be published to ghcr.io/<user>/<name>
name: myaurorabluebuild
# description will be included in the image's metadata
description: Aurora-based image with maccel mouse acceleration and custom packages

# Multi-stage build configuration
# Stage 1: Build or fetch maccel RPM packages
stages:
  - name: rpm-builder
    base-image: quay.io/fedora/fedora-toolbox:latest
    modules:
      # Generate RPM spec files for maccel
      - type: script
        scripts:
          - generate-maccel-specs.sh
      
      # Build RPMs or fetch from GitHub Releases cache
      # This script checks for pre-built RPMs and downloads them if available,
      # otherwise builds them and uploads to GitHub Releases for future use
      - type: script
        scripts:
          - build-or-fetch-maccel-rpms.sh

# Main image configuration
# the base image to build on top of (FROM) and the version tag to use
# Base image options:
#   ghcr.io/ublue-os/aurora-nvidia  - NVIDIA drivers (default)
#   ghcr.io/ublue-os/aurora         - AMD/Intel graphics
#   ghcr.io/ublue-os/aurora-dx      - Developer experience variant
base-image: ghcr.io/ublue-os/aurora-nvidia

# Version options:
#   latest  - Automatic updates (recommended)
#   40      - Fedora 40
#   41      - Fedora 41
#   stable  - Latest stable release
image-version: latest

# module configuration, executed in order
# you can include multiple instances of the same module
modules:
  # Copy built RPMs from builder stage
  - type: files
    files:
      - src: /tmp/maccel-rpms/
        dst: /tmp/maccel-rpms/
    from-stage: rpm-builder

  # Package management - install maccel packages and manage other packages
  - type: dnf
    remove:
      packages:
        - sunshine  # Game streaming (remove if not needed)
    install:
      packages:
        - /tmp/maccel-rpms/akmod-maccel-*.rpm  # Maccel kernel module (AKMOD)
        - /tmp/maccel-rpms/maccel-*.rpm        # Maccel CLI tools
        - htop                                  # Process viewer

  # Flatpak management
  - type: default-flatpaks
    configurations:
      - notify: true # Send notification after install/uninstall is finished (true/false)
        scope: system
        # Remove unwanted Flatpaks
        remove:
          - org.mozilla.Thunderbird  # Email client
        # Add desired Flatpaks
        install:
          - org.keepassxc.KeePassXC  # Password manager

  # Package operation reporting (provides visibility into what succeeded/failed)
  - type: script
    scripts:
      - report-package-operations.sh

  # Image signing (must be last) - uses keyless signing by default
  - type: signing

