---
# yaml-language-server: $schema=https://schema.blue-build.org/recipe-v1.json
# image will be published to ghcr.io/<user>/<name>
name: myaurorabluebuild
# description will be included in the image's metadata
description: Aurora-based image with maccel mouse acceleration and custom packages

# the base image to build on top of (FROM) and the version tag to use
# Base image options:
#   ghcr.io/ublue-os/aurora-nvidia  - NVIDIA drivers (default)
#   ghcr.io/ublue-os/aurora         - AMD/Intel graphics
#   ghcr.io/ublue-os/aurora-dx      - Developer experience variant
base-image: ghcr.io/ublue-os/aurora-nvidia

# Version options:
#   latest  - Automatic updates (recommended)
#   40      - Fedora 40
#   41      - Fedora 41
#   stable  - Latest stable release
image-version: latest

# module configuration, executed in order
# you can include multiple instances of the same module
modules:
  # Maccel integration - Step 1: Generate RPM spec files
  # This script generates or retrieves cached spec files for maccel packages
  # 
  # Maccel version configuration:
  #   To pin to a specific version, set MACCEL_VERSION environment variable
  #   in the GitHub Actions workflow (default: latest from upstream)
  #   Example: MACCEL_VERSION: "0.4.1"
  #
  # Force regeneration:
  #   Set FORCE_REGENERATE=true to regenerate cached specs
  - type: script
    scripts:
      - generate-maccel-specs.sh

  # Maccel integration - Step 2: Build RPM packages from specs
  # Builds akmod-maccel (kernel module with AKMOD) and maccel (CLI tools)
  # Uses spec files generated by generate-maccel-specs.sh
  - type: rpm-build
    specs:
      - ${AKMOD_SPEC_PATH}
      - ${MACCEL_SPEC_PATH}

  # Package management - remove unwanted packages
  - type: dnf
    remove:
      packages:
        - sunshine  # Game streaming (remove if not needed)

  # Package management - add desired packages  
  - type: dnf
    install:
      packages:
        - htop  # Process viewer

  # Flatpak management
  - type: default-flatpaks
    configurations:
      - notify: true # Send notification after install/uninstall is finished (true/false)
        scope: system
        # Remove unwanted Flatpaks
        remove:
          - org.mozilla.Thunderbird  # Email client
        # Add desired Flatpaks
        install:
          - org.keepassxc.KeePassXC  # Password manager

  # Package operation reporting (provides visibility into what succeeded/failed)
  - type: script
    scripts:
      - report-package-operations.sh

  # Image signing (must be last) - uses keyless signing by default
  - type: signing
